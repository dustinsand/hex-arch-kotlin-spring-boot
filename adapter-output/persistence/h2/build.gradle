plugins {
    id 'java'
    id 'kotlin'
    id 'kotlin-spring'
    id 'nu.studer.jooq' version '4.1'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id "org.flywaydb.flyway" version "6.2.3"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.plugin.spring"
}

repositories {
    jcenter()
}

//configurations {
//    all*.exclude group: 'jakarta.xml.bind', module:'jakarta.xml.bind-api'
//}

dependencies {
    implementation project(':voter-application-core')
    implementation 'org.flywaydb:flyway-core:6.2.4'
    implementation 'org.jooq:jooq'
    implementation 'org.jooq:jooq-meta'
    implementation 'org.jooq:jooq-codegen'
    implementation ('org.springframework.boot:spring-boot-starter-jooq') {
        exclude group: "jakarta.xml.bind", module: "jakarta.xml.bind-api"
    }
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa:2.2.3.RELEASE') {
        exclude group: "jakarta.xml.bind", module: "jakarta.xml.bind-api"
    }
    jooqRuntime 'com.h2database:h2:1.4.200'
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring-test:5.2.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
    h2SchemaDbName = "VOTER"
    h2SchemaUser = "username"
    h2SchemaPassword = "password"
    h2Schema = "VOTER"
}

jooq {
    version = '3.12.3'
    edition = 'OSS'
    voter(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = "jdbc:h2:~/${h2SchemaDbName}"
            user = h2SchemaUser
            password = h2SchemaPassword
        }
        generator {
            database {
                name = 'org.jooq.meta.h2.H2Database'
                inputSchema = h2Schema
                includes = '.*'
                excludes = ''
            }
            // Properties documentation: https://www.jooq.org/doc/3.11/manual/code-generation/codegen-advanced/
            generate {
                daos = true
                relations = true
                deprecated = true
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.hexarchbootdemo.adapter.output.persistence.h2.generated-sources.jooq'
                directory = 'src/main/kotlin'
            }
        }
    }
}

flyway {
    url = "jdbc:h2:~/${h2SchemaDbName}"
    user = h2SchemaUser
    password = h2SchemaPassword
    schemas = [h2Schema]
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}
jar {
    enabled = true
}
//bootJar {
//    mainClassName = 'com.hexarchbootdemo.JooqApplication'
//}

compileKotlin.dependsOn generateVoterJooqSchemaSource
generateVoterJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean
