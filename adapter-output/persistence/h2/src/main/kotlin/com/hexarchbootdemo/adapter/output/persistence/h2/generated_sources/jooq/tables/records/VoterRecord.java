/*
 * This file is generated by jOOQ.
 */
package com.hexarchbootdemo.adapter.output.persistence.h2.generated_sources.jooq.tables.records;


import com.hexarchbootdemo.adapter.output.persistence.h2.generated_sources.jooq.tables.Voter;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VoterRecord extends UpdatableRecordImpl<VoterRecord> implements Record4<UUID, String, String, String> {

    private static final long serialVersionUID = 268554974;

    /**
     * Setter for <code>VOTER.ID</code>.
     */
    public VoterRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>VOTER.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>VOTER.FIRST_NAME</code>.
     */
    public VoterRecord setFirstName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>VOTER.FIRST_NAME</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>VOTER.LAST_NAME</code>.
     */
    public VoterRecord setLastName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>VOTER.LAST_NAME</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>VOTER.SOCIAL_SECURITY_NUMBER</code>.
     */
    public VoterRecord setSocialSecurityNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>VOTER.SOCIAL_SECURITY_NUMBER</code>.
     */
    public String getSocialSecurityNumber() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Voter.VOTER.ID;
    }

    @Override
    public Field<String> field2() {
        return Voter.VOTER.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Voter.VOTER.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Voter.VOTER.SOCIAL_SECURITY_NUMBER;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getSocialSecurityNumber();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getSocialSecurityNumber();
    }

    @Override
    public VoterRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public VoterRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public VoterRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public VoterRecord value4(String value) {
        setSocialSecurityNumber(value);
        return this;
    }

    @Override
    public VoterRecord values(UUID value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VoterRecord
     */
    public VoterRecord() {
        super(Voter.VOTER);
    }

    /**
     * Create a detached, initialised VoterRecord
     */
    public VoterRecord(UUID id, String firstName, String lastName, String socialSecurityNumber) {
        super(Voter.VOTER);

        set(0, id);
        set(1, firstName);
        set(2, lastName);
        set(3, socialSecurityNumber);
    }
}
